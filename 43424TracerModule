-- TracersModule.lua
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera

local EnvironmentTracers = {
    Settings = {
        Enabled = false,
        Transparency = 0.5,
        Thickness = 1,
        Color = Color3.new(1, 1, 1),
    },
    WrappedPlayers = {}
}

local function WrapTracers(Player)
    local PlayerTable = EnvironmentTracers.WrappedPlayers[Player.Name]

    if not PlayerTable then
        PlayerTable = { Tracer = Drawing.new("Line"), Connections = {} }
        EnvironmentTracers.WrappedPlayers[Player.Name] = PlayerTable

        PlayerTable.Connections.Tracer = RunService.RenderStepped:Connect(function()
            if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and EnvironmentTracers.Settings.Enabled then
                local Position, OnScreen = Camera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)

                if OnScreen then
                    PlayerTable.Tracer.Visible = true
                    PlayerTable.Tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y) -- Bottom of the screen
                    PlayerTable.Tracer.To = Vector2.new(Position.X, Position.Y)
                    PlayerTable.Tracer.Color = EnvironmentTracers.Settings.Color
                    PlayerTable.Tracer.Thickness = EnvironmentTracers.Settings.Thickness
                    PlayerTable.Tracer.Transparency = EnvironmentTracers.Settings.Transparency
                else
                    PlayerTable.Tracer.Visible = false
                end
            else
                PlayerTable.Tracer.Visible = false
            end
        end)
    end
end

local function UnWrapTracers(Player)
    if EnvironmentTracers.WrappedPlayers[Player.Name] then
        local PlayerTable = EnvironmentTracers.WrappedPlayers[Player.Name]
        PlayerTable.Tracer:Remove()
        PlayerTable.Connections.Tracer:Disconnect()
        EnvironmentTracers.WrappedPlayers[Player.Name] = nil
    end
end

local function LoadTracers()
    for _, Player in ipairs(Players:GetPlayers()) do
        if Player ~= Players.LocalPlayer then
            WrapTracers(Player)
        end
    end

    Players.PlayerAdded:Connect(WrapTracers)
    Players.PlayerRemoving:Connect(UnWrapTracers)
end

return {
    EnvironmentTracers = EnvironmentTracers,
    LoadTracers = LoadTracers
}
